@model ASP_SpringLibrary.ViewModels.Cliente.CadastroClienteViewModel

@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/userLogin.css")

<aside>
    <img src="../../Photos/aside-image.png" style="height:100%;"/>
</aside>
<div id="filler"></div>
<div class="formContainer">
    <img src="../../Photos/logo.png" />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idCli, new { Value = 0 }) <!-- ID 0 escondido para passar à Controller -->

        <div class="checkbox radioArea">
            <div>
                Física
                <input class="tipoCli" name="tipoCli" type="radio" value="False" />
            </div>
            <div>
                Jurídica
                <input class="tipoCli" name="tipoCli" type="radio" value="True" />
            </div>
            @Html.ValidationMessageFor(model => model.tipoCli, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.nomCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.nomCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.nomCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.emailCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.emailCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.emailCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.senhaCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.senhaCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.senhaCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.confSenhaCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.confSenhaCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.confSenhaCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.celCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.celCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.celCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.CEPCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.CEPCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CEPCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.numEndCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.numEndCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.numEndCli, "", new { @class = "text-danger" })
        <div></div>
        @Html.LabelFor(model => model.compEndCli, htmlAttributes: new { @class = "control-label " })
        @Html.EditorFor(model => model.compEndCli, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.compEndCli, "", new { @class = "text-danger" })
        <div id="Fisico">
            <div>
                @Html.LabelFor(model => model.CPFCliF, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CPFCliF, new { htmlAttributes = new { @class = "form-control", @style = "height: 40px;\r\n    width: 460px;\r\n    border-radius: 25px;\r\n    border-width: 1px;\r\n    border-color: #8B8B8B;\r\n    background-color: #F8F4F4;" } })
                @Html.ValidationMessageFor(model => model.CPFCliF, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.LabelFor(model => model.dtNascCliF, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.dtNascCliF, new { htmlAttributes = new { @class = "form-control", @style = "height: 40px;\r\n    width: 460px;\r\n    border-radius: 25px;\r\n    border-width: 1px;\r\n    border-color: #8B8B8B;\r\n    background-color: #F8F4F4;" } })
                @Html.ValidationMessageFor(model => model.dtNascCliF, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="Juridico">
            <div>
                @Html.LabelFor(model => model.CNPJCliJ, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.CNPJCliJ, new { htmlAttributes = new { @class = "form-control", @style = "height: 40px;\r\n    width: 460px;\r\n    border-radius: 25px;\r\n    border-width: 1px;\r\n    border-color: #8B8B8B;\r\n    background-color: #F8F4F4;" } })
                @Html.ValidationMessageFor(model => model.CNPJCliJ, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.LabelFor(model => model.fantaCliJ, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.fantaCliJ, new { htmlAttributes = new { @class = "form-control", @style = "height: 40px;\r\n    width: 460px;\r\n    border-radius: 25px;\r\n    border-width: 1px;\r\n    border-color: #8B8B8B;\r\n    background-color: #F8F4F4;" } })
                @Html.ValidationMessageFor(model => model.fantaCliJ, "", new { @class = "text-danger" })
            </div>
            <div>
                @Html.LabelFor(model => model.represCliJ, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.represCliJ, new { htmlAttributes = new { @class = "form-control", @style = "height: 40px;\r\n    width: 460px;\r\n    border-radius: 25px;\r\n    border-width: 1px;\r\n    border-color: #8B8B8B;\r\n    background-color: #F8F4F4;" } })
                @Html.ValidationMessageFor(model => model.represCliJ, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="formEnd">
            <button type="submit" class="btn">Cadastrar</button>
            @Html.ActionLink("Já tenho cadastro", "Login")
        </div>
    }
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval") <!-- Para utilizar o DataAnnotation Remote -->
        @Scripts.Render("~/bundles/inputmask") <!-- Para utilizar o jQuery InputMask -->
        @Scripts.Render("~/Scripts/moment.js") <!-- Para arrumar o formatador de data -->

        <script>
            $('#Fisico').css("display", "none")
            $('#Juridico').css("display", "none")
            $('input[type=submit]').css("display", "none")

            // Seleção da natureza do cliente
            $('input[type=radio][name=tipoCli]').change(function () {
                if (this.value == 'False') {
                    $('#Juridico').css("display", "none")
                    $('#Fisico').css("display", "block")
                    $('input[name=CPFCliF]').val("");
                    $('input[name=dtNascCliF]').val("");
                }
                else if (this.value == 'True') {
                    $('#Fisico').css("display", "none")
                    $('#Juridico').css("display", "block")
                    $('input[name=CNPJCliJ]').val("");
                    $('input[name=fantaCliJ]').val("");
                    $('input[name=represCliJ]').val("");
                }

                $('input[type=submit]').css("display", "block")
            });

            // Máscaras JQuery
            $(document).ready(function () {
                $("#celCli").inputmask("mask", { "mask": "99 99999-9999" });
                $("#CEPCli").inputmask("mask", { "mask": "99999-999" });
                $("#CPFCliF").inputmask("mask", { "mask": "999.999.999-99" });
                $("#dtNascCliF").inputmask("mask", { "mask": "99/99/9999" });
                $("#CNPJCliJ").inputmask("mask", { "mask": "99.999.999/9999-99" });
            });

            // Arrumar o formatador de data
            $(function () {
                $.validator.methods.date = function (value, element) {
                    return this.optional(element) || moment(value, "DD.MM.YYYY", true).isValid();
                }
            });
        </script>
    }
